import{_ as i,c as s,a2 as t,o as n}from"./chunks/framework.Bt53DRYp.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Backend/Spring/Spring原理.md","filePath":"Backend/Spring/Spring原理.md"}'),e={name:"Backend/Spring/Spring原理.md"};function p(l,a,r,h,o,c){return n(),s("div",null,a[0]||(a[0]=[t(`<h2 id="beanfactory" tabindex="-1">BeanFactory <a class="header-anchor" href="#beanfactory" aria-label="Permalink to &quot;BeanFactory&quot;">​</a></h2><h3 id="beanfactory与applicationcontext" tabindex="-1">BeanFactory与ApplicationContext <a class="header-anchor" href="#beanfactory与applicationcontext" aria-label="Permalink to &quot;BeanFactory与ApplicationContext&quot;">​</a></h3><ul><li>BeanFactory 是 ApplicationContext 父接口</li><li>BeanFactory 是 Spring 的核心容器，ApplicationContext 实行组合了它的功能</li></ul><p><img src="https://raw.githubusercontent.com/Moriic/picture/main/image/1711358859_0.png" alt="image-20230907145512134"></p><p>getBean 由 BeanFactory 实现</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Object </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String name) throws BeansException {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertBeanFactoryActive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBeanFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,6)]))}const g=i(e,[["render",p]]);export{d as __pageData,g as default};
